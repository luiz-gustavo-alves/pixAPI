version: '3.8'
services:
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    pid: host
    ports:
      - 9100:9100
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - pix-api-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - pix-api-network

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - pix-api-network

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_URI=postgres:5432/postgres?sslmode=disable
      - DATA_SOURCE_USER=postgres
      - DATA_SOURCE_PASS=postgres
    networks:
      - pix-api-network

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pixAPI_test
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pix-api-network

  pix-api:
    container_name: pix-api
    image: pix_api
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE__HOST=postgres
      - DATABASE__PORT=5432
      - DATABASE__USERNAME=postgres
      - DATABASE__PASSWORD=postgres
      - DATABASE__NAME=pixAPI_test
      - QueueSettings__HostName=172.17.0.1
    networks:
      - pix-api-network

  migrations:
    container_name: pix-api-migrations
    image: pix_api_migrations
    build:
      context: ../
      dockerfile: Dockerfile.migrations
    depends_on:
      - postgres
    environment:
      - DATABASE__HOST=postgres
      - DATABASE__PORT=5432
      - DATABASE__USERNAME=postgres
      - DATABASE__PASSWORD=postgres
      - DATABASE__NAME=pixAPI_test
    networks:
      - pix-api-network

networks:
  pix-api-network:
    name: "pix-api-network"

volumes:
  grafana:
  postgres:
